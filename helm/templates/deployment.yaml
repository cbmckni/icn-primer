apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.Deployment.Name }}
  labels:
    app: {{ .Values.Deployment.Name }}
spec:
  serviceName: {{ .Values.Deployment.Name }}
  replicas: {{ .Values.Deployment.Replicas }}
  selector:
    matchLabels:
      app: {{ .Values.Deployment.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.Deployment.Name }}
    spec:
      containers:               
      - name: {{ .Values.Deployment.Name }}
        image: {{ .Values.Deployment.Image }}
        command: [ "/bin/sh", "-c", "--" ]
        args: [ {{ .Values.Deployment.Arg }} ]
        resources:
          requests:
            cpu: {{ .Values.Resources.Requests.CPU }}
            memory: {{ .Values.Resources.Requests.Memory }}
          limits:
            cpu: {{ .Values.Resources.Limits.CPU }}
            memory: {{ .Values.Resources.Limits.Memory }}
        volumeMounts:
        - name: {{ .Values.Deployment.Name }}-pvc
          mountPath: /workspace
      {{ if .Values.Deployment.NodeSelector.Enabled }} 
      nodeSelector:
        {{ .Values.Deployment.NodeSelector.Arg }}
      {{ end }}
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.Deployment.Name }}-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.PVC.StorageClass }}
      resources:
        requests:
          storage: {{ .Values.PVC.Storage }}
---
{{ if .Values.Ingress.Enabled }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.Deployment.Name }}
  annotations:
    traefik.ingress.kubernetes.io/router.tls: ""
    kubernetes.io/ingress.class: {{ .Values.Ingress.Class }}
spec:
  rules:
  - host: {{ .Values.Ingress.Host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Values.Deployment.Name }}
          servicePort: 6363
{{ end }}